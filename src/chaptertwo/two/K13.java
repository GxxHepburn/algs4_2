package chaptertwo.two;

/**
 * @author gxx
 * @create 2021-06-18 11:11
 */
public class K13 {

    public static void main(String[] args) {
        /**
         * 提示：比较次数至少是比较树的外部路径的长度(根结点到所有叶子结点的路径长度之和)，当树平衡时该值最小。
         * 1、平均比较次数=总的比较次数/排列数
         * 2、N个输入元素，排列数有N!个
         * 3、一颗二叉比较树的叶子节点个数为N!，当树平衡时树高h=lgN!，总的比较次数为N!lgN!
         * 5、代入得:N!lgN!/N!=lgN!~NlgN
         * 6、所以平均情况得下限为~NlgN
         */

        /**
         * 关于提示部分说明。总末尾节点树一样时(N!)，当树越平衡，路径之和越小。当完全平衡时，路径之和最小。
         * 稍加思索就可以得到这个结论了，不在论证。
         */
    }
}
