package chaptertwo.two;

public class K4 {

    public static void main(String[] args) {
        /**
         * 当且仅当两个输入的子数组都有序时原地归并的抽象方法才能得到正确的结果
         *
         * 证明：两个子数组就像两个栈一样，如果子数组A不是有序的，则子数组A中存在
         *  元素m，n且m>n。因为归并时，元素m必然比n先出栈，导致在归并后的数组中
         *  元素m仍然在元素n之前。
         *  综上，当且晋档两个输入的子数组都有序时原地归并的抽象方法才能得到正确
         *      的结果。
         *  举例:    1   2   6   7   |   3   5   4   8
         *          1
         *          1   2
         *          1   2   3
         *          1   2   3   5
         *          1   2   3   5   4
         *          1   2   3   5   4   6
         *          1   2   3   5   4   6   7
         *          1   2   3   5   4   6   7   8
         *
         */
    }
}
